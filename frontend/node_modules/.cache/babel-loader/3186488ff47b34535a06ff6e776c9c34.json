{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS } from \"../constants/useConstant\";\nexport const userAction = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const user = await Axios.post('/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: user\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(user));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/home/abhishek/Desktop/P Project/Amazone_Clone/frontend/src/actions/userAction.js"],"names":["Axios","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","userAction","email","password","dispatch","type","payload","user","post","localStorage","setItem","JSON","stringify","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,mBAAhD,QAA2E,0BAA3E;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAmB;AAE9DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN,mBAAR;AAA6BO,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAtC,GAAD,CAAR;;AAEA,MAAI;AAEA,UAAMI,IAAI,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,eAAX,EAA4B;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA5B,CAAnB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,mBAAR;AAA6BM,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AAEH,GAND,CAME,OAAOM,KAAP,EAAc;AACZT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,gBAAR;AAA0BQ,MAAAA,OAAO,EAAEO;AAAnC,KAAD,CAAR;AACH;AACJ,CAbM","sourcesContent":["import Axios from \"axios\"\nimport { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS } from \"../constants/useConstant\"\n\nexport const userAction = (email, password) => async(dispatch) => {\n\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } })\n\n    try {\n\n        const user = await Axios.post('/users/signin', { email, password })\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: user })\n        localStorage.setItem(\"userInfo\", JSON.stringify(user))\n\n    } catch (error) {\n        dispatch({ type: USER_SIGNIN_FAIL, payload: error })\n    }\n}"]},"metadata":{},"sourceType":"module"}