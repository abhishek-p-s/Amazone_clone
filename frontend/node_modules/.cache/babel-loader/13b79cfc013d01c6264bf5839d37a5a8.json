{"ast":null,"code":"import Axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstant\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS } from \"../constants/orderConstant\";\nexport const orderCreateAction = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/home/abhishek/Desktop/P Project/Amazone_Clone/frontend/src/actions/orderAction.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","orderCreateAction","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","message","detailsOrder","orderId","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,EAAwEC,qBAAxE,EAA+FC,qBAA/F,QAA4H,4BAA5H;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;AACrED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAER,oBAAR;AAA8BS,IAAAA,OAAO,EAAEJ;AAAvC,GAAD,CAAR;;AACA,MAAI;AAEA,UAAM;AAAEK,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AAAd,QAA+BJ,QAAQ,EAA7C;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAACgB,IAAN,CAAW,aAAX,EAA0BR,KAA1B,EAAiC;AACpDS,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AADnC;AAD2C,KAAjC,CAAvB;AAKAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP,oBAAR;AAA8BQ,MAAAA,OAAO,EAAEG;AAAvC,KAAD,CAAR;AACAN,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AACAmB,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACH,GAXD,CAWE,OAAOC,KAAP,EAAc;AACZb,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAET,iBAAR;AAA2BU,MAAAA,OAAO,EAAEU,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CAhBM;AAmBP,OAAO,MAAMC,YAAY,GAAIC,OAAD,IAAa,OAAMhB,QAAN,EAAgBC,QAAhB,KAA6B;AAClED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEN,qBAAR;AAA+BO,IAAAA,OAAO,EAAEa;AAAxC,GAAD,CAAR;;AAEA,MAAI;AAEA,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAAC0B,GAAN,CAAW,eAAcD,OAAQ,EAAjC,EAAoC;AACvDR,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AADnC;AAD8C,KAApC,CAAvB;AAMAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AAEH,GAVD,CAUE,OAAOgB,KAAP,EAAc;AACZb,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,qBAAR;AAA+BM,MAAAA,OAAO,EAAEU;AAAxC,KAAD,CAAR;AACH;AACJ,CAhBM","sourcesContent":["import Axios from \"axios\"\nimport { CART_EMPTY } from \"../constants/cartConstant\"\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS } from \"../constants/orderConstant\"\n\nexport const orderCreateAction = (order) => async(dispatch, getState) => {\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order })\n    try {\n\n        const { userSignin: { userInfo } } = getState()\n        const { data } = await Axios.post('/api/orders', order, {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        })\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data })\n        dispatch({ type: CART_EMPTY })\n        localStorage.removeItem(\"cartItems\")\n    } catch (error) {\n        dispatch({ type: ORDER_CREATE_FAIL, payload: error.message })\n    }\n}\n\n\nexport const detailsOrder = (orderId) => async(dispatch, getState) => {\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId })\n\n    try {\n\n        const { data } = await Axios.get(`/api/orders/${orderId}`, {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        })\n\n        dispatch({ type: ORDER_DETAILS_SUCCESS })\n\n    } catch (error) {\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: error })\n    }\n}"]},"metadata":{},"sourceType":"module"}