{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/useConstant\";\nexport const userAction = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const user = await Axios.post('api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: user.data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(user.data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const RegisterAction = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const user = await Axios.post('api/users/signup', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: user.data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: user.data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(user.data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const signOut = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  localStorage.removeItem(\"shippingAddress\");\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};","map":{"version":3,"sources":["/home/abhishek/Desktop/P Project/Amazone/frontend/src/actions/userAction.js"],"names":["Axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","userAction","email","password","dispatch","type","payload","user","post","data","localStorage","setItem","JSON","stringify","error","message","RegisterAction","name","signOut","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,qBAApD,EAA2EC,gBAA3E,EAA6FC,mBAA7F,EAAkHC,mBAAlH,EAAuIC,YAAvI,QAA2J,0BAA3J;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAmB;AAE9DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,mBAAR;AAA6BQ,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAtC,GAAD,CAAR;;AAEA,MAAI;AAEA,UAAMI,IAAI,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,kBAAX,EAA+B;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA/B,CAAnB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,mBAAR;AAA6BO,MAAAA,OAAO,EAAEC,IAAI,CAACE;AAA3C,KAAD,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAI,CAACE,IAApB,CAAjC;AAEH,GAND,CAME,OAAOK,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,gBAAR;AAA0BS,MAAAA,OAAO,EAAEQ,KAAK,CAACC;AAAzC,KAAD,CAAR;AACH;AACJ,CAbM;AAeP,OAAO,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAOf,KAAP,EAAcC,QAAd,KAA2B,MAAMC,QAAN,IAAmB;AAExEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV,qBAAR;AAA+BW,IAAAA,OAAO,EAAE;AAAEW,MAAAA,IAAF;AAAQf,MAAAA,KAAR;AAAeC,MAAAA;AAAf;AAAxC,GAAD,CAAR;;AAEA,MAAI;AAEA,UAAMI,IAAI,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,kBAAX,EAA+B;AAAES,MAAAA,IAAF;AAAQf,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAA/B,CAAnB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,qBAAR;AAA+BU,MAAAA,OAAO,EAAEC,IAAI,CAACE;AAA7C,KAAD,CAAR;AACAL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,mBAAR;AAA6BO,MAAAA,OAAO,EAAEC,IAAI,CAACE;AAA3C,KAAD,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAI,CAACE,IAApB,CAAjC;AAEH,GAPD,CAOE,OAAOK,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,kBAAR;AAA4BY,MAAAA,OAAO,EAAEQ,KAAK,CAACC;AAA3C,KAAD,CAAR;AACH;AACJ,CAdM;AAgBP,OAAO,MAAMG,OAAO,GAAG,MAAOd,QAAD,IAAc;AACvCM,EAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAT,EAAAA,YAAY,CAACS,UAAb,CAAwB,WAAxB;AACAT,EAAAA,YAAY,CAACS,UAAb,CAAwB,iBAAxB;AACAf,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACH,CALM","sourcesContent":["import Axios from \"axios\"\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/useConstant\"\n\nexport const userAction = (email, password) => async(dispatch) => {\n\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } })\n\n    try {\n\n        const user = await Axios.post('api/users/signin', { email, password })\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: user.data })\n        localStorage.setItem(\"userInfo\", JSON.stringify(user.data))\n\n    } catch (error) {\n        dispatch({ type: USER_SIGNIN_FAIL, payload: error.message })\n    }\n}\n\nexport const RegisterAction = (name, email, password) => async(dispatch) => {\n\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email, password } })\n\n    try {\n\n        const user = await Axios.post('api/users/signup', { name, email, password })\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: user.data })\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: user.data })\n        localStorage.setItem(\"userInfo\", JSON.stringify(user.data))\n\n    } catch (error) {\n        dispatch({ type: USER_REGISTER_FAIL, payload: error.message })\n    }\n}\n\nexport const signOut = () => (dispatch) => {\n    localStorage.removeItem(\"userInfo\")\n    localStorage.removeItem(\"cartItems\")\n    localStorage.removeItem(\"shippingAddress\")\n    dispatch({ type: USER_SIGNOUT })\n}"]},"metadata":{},"sourceType":"module"}